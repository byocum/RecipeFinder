@model RecipeFinder.Models.ViewModels.IngredientsListViewModel;
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    ViewBag.Title = "Ingredients";
}


<title>@ViewBag.Title</title>
@using (Html.BeginForm())
{
    <div class="container-fluid feature">
        <p class="titleText">Ingredients</p>

        @{
            @:<div class="row">

                var count = 1;
                @Html.ValidationMessageFor(p => p.Ingredients);

                if (@Model != null)
                {
                    for (var index = @Model.Ingredients.Count() - 1; index > -1; index--)
                    {
                        if (count > 3)
                        {
                            count = 1;
                        @:</div>
                        @:<div class="row">
                        }
                        <div class="col-lg-4 col-md-12 col-sm-12">
                            <div class="col-lg-12 col-md-12 col-sm-12 div-list grey-gradient">
                                <label for="btnIngredientName" name="lblSelectedIngredient">
                                    @Model.Ingredients[index].NamePlural
                                    @Html.HiddenFor(m => m.Ingredients[index].IngredientNameId)
                                    @Html.HiddenFor(m => m.Ingredients[index].NamePlural)
                                </label>
                                <button class="grey-gradient" id="btnIngredientName" name="btnIngredientName" formaction=@Url.Action("DeleteIngredientFromSearch") formmethod="post" value="@Model.Ingredients[index].NamePlural">X</button>
                            </div>
                        </div>

                        count++;
                    }
                }

            @:</div>
        }

    </div>
    <!-- Button trigger modal -->
    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#modalAddIngredient">
        Add Ingredient
    </button>

    <!-- Modal -->
    <div class="modal fade" id="modalAddIngredient" tabindex="-1" aria-labelledby="modalAddIngredientLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-scrollable">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="modalAddIngredientLabel">ADD INGREDIENT</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>

                <div class="modal-body">
                    <div asp-validation-summary="ModelOnly" class="errorMessage"></div>
                    <div class="form-group">
                        <label class="formLabel">@Html.DisplayNameFor(model => model.Ingredient.IngredientNameId)</label>
                        @Html.TextBoxFor(model => model.Ingredient.IngredientNameId)
                    <span asp-validation-for="Ingredient.IngredientNameId" class="errorMessage"></span>
                    </div>
                    <div class="form-group">
                        <label class="formLabel">@Html.DisplayNameFor(model => model.Ingredient.NamePlural)</label>
                        @Html.TextBoxFor(model => model.Ingredient.NamePlural)
                    <span asp-validation-for="Ingredient.NamePlural" class="errorMessage"></span>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <button class="btn btn-primary" id="btnAddIngredient" name="btnAddIngredient" formaction=@Url.Action("AddIngredient") formmethod="post">Save</button>
                </div>
            </div>
        </div>
    </div>
}