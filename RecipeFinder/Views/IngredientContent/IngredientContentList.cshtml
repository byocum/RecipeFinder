@model RecipeFinder.Models.ViewModels.IngredientsListViewModel;
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    ViewBag.Title = "Ingredients";
}


<title>@ViewBag.Title</title>
@using (Html.BeginForm())
{
<div class="container-fluid feature">
    <p class="titleText">Ingredients</p>
    <partial name="_AddEditIngredient" for="Ingredient" />
    @{
        @:<div class="row">




            var count = 1;
            @Html.ValidationMessageFor(p => p.Ingredients);

            if (@Model != null)
            {
                for (var index = @Model.Ingredients.Count() - 1; index > -1; index--)
                {
                    if (count > 3)
                    {
                        count = 1;
                    @:</div>
                    @:<div class="row">
                    }
                    <div class="col-lg-4 col-md-12 col-sm-12">
                        <div class="col-lg-12 col-md-12 col-sm-12 div-list grey-gradient">
                            <label for="btnIngredientName" name="lblSelectedIngredient">
                                @Model.Ingredients[index].NamePlural
                                @Html.HiddenFor(m => m.Ingredients[index].IngredientNameId)
                                @Html.HiddenFor(m => m.Ingredients[index].NamePlural)
                            </label>
                            <button class="grey-gradient" id="btnIngredientName" name="btnIngredientName" formaction=@Url.Action("DeleteIngredientFromSearch") formmethod="post" value="@Model.Ingredients[index].NamePlural">X</button>
                        </div>
                    </div>
                    count++;
                }
            }

        @:</div>
    }

</div>


}

@section customJavascript{
    <script type="text/javascript">
        if (@TempData["ShowAddIngredientModal"] == 1) {
        $('#modalAddIngredient').modal({ show: true });
        }
    </script>
}